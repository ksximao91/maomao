local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer
local character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = character:WaitForChild("HumanoidRootPart")

local devv = require(ReplicatedStorage.devv)
local Signal = devv.load("Signal")
local item = devv.load("v3item")

local autoatm = true
local attackInterval = 0.2

local qtid
for _, v in next, item.inventory.items do
    if v.name == 'Fists' then
        qtid = v.guid
        break
    end
end

local function hopServer()
    local success, result = pcall(function()
        return game:HttpGet("https://games.roblox.com/v1/games/"..game.PlaceId.."/servers/Public?sortOrder=Asc&limit=100")
    end)
    if success then
        local data = HttpService:JSONDecode(result)
        local Servers = {}
        for _, v in ipairs(data.data) do
            if v.playing < v.maxPlayers and v.playing > 3 then
                table.insert(Servers, v)
            end
        end
        if #Servers > 0 then
            local randomServer = Servers[math.random(1, #Servers)]
            TeleportService:TeleportToPlaceInstance(game.PlaceId, randomServer.id, LocalPlayer)
            task.wait(5) 
        end
    end
end

local function attackATM()
    if not LocalPlayer.Character then return false end
    local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not rootPart then return false end

    local anyATM = false
    local atmFolder = workspace:FindFirstChild("Game") and workspace.Game:FindFirstChild("Props") and workspace.Game.Props:FindFirstChild("ATM")
    if atmFolder then
        for _, atm in ipairs(atmFolder:GetChildren()) do
            if atm:IsA("Model") and (atm:GetAttribute("health") or 0) > 0 then
                anyATM = true
                local pos = atm:GetPivot().Position
                rootPart.CFrame = CFrame.new(pos.x, pos.y, pos.z)
                Signal.FireServer("equip", qtid)
                Signal.FireServer("meleeItemHit", "prop", {meleeType="meleepunch", guid=atm:GetAttribute("guid")})
            end
        end
    end
    return anyATM
end

task.spawn(function()
    while autoatm do
        local hasATM = false
        local success, result = pcall(function()
            hasATM = attackATM()
        end)
        
        if not success or not hasATM then
            hopServer()
            break
        end

        task.wait(attackInterval)
    end
end)
